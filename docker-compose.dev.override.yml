# Docker Compose override for development and seeding
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.override.yml up

version: '3.8'

services:
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: tradygo_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./scripts:/scripts

  redis:
    ports:
      - "6379:6379"

  minio:
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin

  # Development API service for seeding
  api-dev:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: tradygo-api-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://tradygo:tradygo_dev_password@postgres:5432/tradygo_core
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      JWT_ACCESS_SECRET: dev_jwt_secret_key_for_seeding_only
      JWT_REFRESH_SECRET: dev_refresh_secret_key_for_seeding_only
      JWT_ACCESS_TTL: 15m
      JWT_REFRESH_TTL: 30d
      PASSWORD_BCRYPT_ROUNDS: 10
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    working_dir: /app
    command: [
      "sh", "-c", 
      "npm install -g pnpm && pnpm install && tail -f /dev/null"
    ]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tradygo-internal
    profiles:
      - dev

  # Seeding service
  seeder:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: tradygo-seeder
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://tradygo:tradygo_dev_password@postgres:5432/tradygo_core
      REDIS_URL: redis://redis:6379
    volumes:
      - ./apps/api:/app
      - /app/node_modules
    working_dir: /app
    command: [
      "sh", "-c", 
      "npm install -g pnpm && pnpm install && pnpm run db:generate && pnpm run db:migrate && pnpm run db:seed:vendors"
    ]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tradygo-internal
    profiles:
      - seed

volumes:
  postgres_dev_data:
    driver: local

networks:
  tradygo-internal:
    driver: bridge