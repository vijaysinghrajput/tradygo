version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: tradygo-postgres-dev
    environment:
      POSTGRES_DB: tradygo_core
      POSTGRES_USER: tradygo
      POSTGRES_PASSWORD: tradygo123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - tradygo-dev

  redis:
    image: redis:7-alpine
    container_name: tradygo-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradygo-dev

  minio:
    image: minio/minio:latest
    container_name: tradygo-minio-dev
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - tradygo-dev

  minio-init:
    image: minio/mc:latest
    container_name: tradygo-minio-init-dev
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/tradygo --ignore-existing;
      /usr/bin/mc policy set public minio/tradygo;
      exit 0;
      "
    networks:
      - tradygo-dev

  mailhog:
    image: mailhog/mailhog:latest
    container_name: tradygo-mailhog-dev
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - tradygo-dev

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  tradygo-dev:
    driver: bridge